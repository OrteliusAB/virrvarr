(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{370:function(t,a,e){"use strict";e.r(a);var s=e(25),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"layout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layout"}},[t._v("#")]),t._v(" Layout")]),t._v(" "),e("p",[t._v('Virrvarr supports different graph layouts that can be set using the "setLayout" function. Layouts can be cleared by using the "resetLayout" function.')]),t._v(" "),e("p",[t._v("To set a layout, you need to provide the setLayout function with a layout type as well as an optional configuration.")]),t._v(" "),e("p",[t._v("For example:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hierarchy"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useX"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngraph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resetLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"hierarchy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hierarchy"}},[t._v("#")]),t._v(" Hierarchy")]),t._v(" "),e("p",[t._v("Hierarchy locks one axis for all nodes, and sorts them by that axis based on a provided groupBy criteria. This is useful if you want to display your network graph as an hierarchical tree.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("useX -> If true the hierarchy will display from left to right, otherwise top to bottom")]),t._v(" "),e("li",[t._v("groupBy -> A function that takes the bound data on each node and returns a group identifier. By default nodes will be grouped by type.")]),t._v(" "),e("li",[t._v("distance -> A number that defines the distance between each axis. By default this will be computed based on node height/width.")])]),t._v(" "),e("p",[t._v('To use the hierarchy layout you supply the "hierarchy" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hierarchy"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"grid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grid"}},[t._v("#")]),t._v(" Grid")]),t._v(" "),e("p",[t._v("Grid layout creates a grid on either the Y, X or both axises. The grid draws nodes towards the set axises, making some graphs look much more tidy. This layout will lower the edge strength, but not remove it completely. This may make the graph seem more fluid but is necessary in order for the matrix to not get overly messy.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("useY -> If true the Y axis force will be activated")]),t._v(" "),e("li",[t._v("useX -> If true the X axis force will be activated")]),t._v(" "),e("li",[t._v("strength -> How strong should the force that pulls node into the axis be? (must be in the range 0-1!)")]),t._v(" "),e("li",[t._v("size -> How large should each axis space be? If no size is provided it will be computed based on node sizes")]),t._v(" "),e("li",[t._v("multiplier -> If no size is provided the size of nodes will be used. This multiplier can be used to multiply the measurements by a given number.")])]),t._v(" "),e("p",[t._v('To use grid layout you supply the "grid" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"grid"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"matrix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#matrix"}},[t._v("#")]),t._v(" matrix")]),t._v(" "),e("p",[t._v("Matrix layout places all nodes in a square matrix. This is usefull for example if you want to get an overview of all nodes that are currently displayed. By default they will be ordered from left to right and top to bottom based on the alphabetical order of their name, but you can provide your own grouping function if you wish.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("groupBy -> A function that will take the bound data from the node and should return a value to be sorted on")]),t._v(" "),e("li",[t._v("strength -> How strong should the force be that pulls the nodes into the matrix? (must be in range 0-1!)")])]),t._v(" "),e("p",[t._v('To use matrix layout you supply the "matrix" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matrix"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"cluster"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cluster"}},[t._v("#")]),t._v(" Cluster")]),t._v(" "),e("p",[t._v("Cluster layout allows you to cluster nodes together into groups. This is useful if for example you want to show relationships between nodes that are not necessarily connected by edges.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("groupBy -> A function that will take the bound data from the node and should return a value to be sorted on")]),t._v(" "),e("li",[t._v("strength -> How strong should the force be that pulls the nodes into the clusters? (must be in range 0-1!)")])]),t._v(" "),e("p",[t._v('To use cluster layout you supply the "cluster" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"treemap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[t._v("#")]),t._v(" Treemap")]),t._v(" "),e("p",[t._v("Treemap layout generates a treemap based on node groups.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("groupBy -> A function that will take the bound data from the node and should return a value to be sorted on")]),t._v(" "),e("li",[t._v("width -> Maximum width for the treemap")]),t._v(" "),e("li",[t._v("height -> Maximum height for the treemap")]),t._v(" "),e("li",[t._v("strength -> How strong should the force be that pulls the nodes into the treemap clusters? (must be in range 0-1!)")])]),t._v(" "),e("p",[t._v('To use treemap layout you supply the "treemap" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"treemap"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"radial"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#radial"}},[t._v("#")]),t._v(" Radial")]),t._v(" "),e("p",[t._v("Radial layout orders nodes into a circle. This is particularly useful if nodes are heavily interconnected, and it it is difficult to make out what is actually connected to what.")]),t._v(" "),e("p",[t._v("You can pass the following configuration to the layout:")]),t._v(" "),e("ul",[e("li",[t._v("radius -> Radius of the circle")]),t._v(" "),e("li",[t._v("strength -> How strong should the force be that pulls the nodes into the circle? (must be in range 0-1!)")])]),t._v(" "),e("p",[t._v('To use radial layout you supply the "radial" type to the setLayout function:')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setLayout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"radial"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h1",{attrs:{id:"centering"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centering"}},[t._v("#")]),t._v(" Centering")]),t._v(" "),e("p",[t._v("Centering things in your graph can sometimes be a bit tricky. Virrvarr gives you two options.")]),t._v(" "),e("h2",{attrs:{id:"center-force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#center-force"}},[t._v("#")]),t._v(" Center Force")]),t._v(" "),e("p",[t._v("A center force can be toggled on and off. By default this will be on right when the graph loads, and will turn itself off after the initial zoom to fit has completed. This force tries to ensure that the average of all node positions should be 0. This means that the graph will be centered without affecting the nodes' relative position to each other. The center force is particularly useful in graphs that are not disjointed, but can also be great for use together with some of the Virrvarr layouts. Note, though, that it may actually cause issues with some layouts, such as the treemap.")]),t._v(" "),e("p",[t._v("You can toggle the force on and off like so:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenterForce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngraph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCenterForce")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"bounding-box"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bounding-box"}},[t._v("#")]),t._v(" Bounding Box")]),t._v(" "),e("p",[t._v("Another option for ensuring that nodes don't stray too far away is to set a bounding box. A bounding box is like an invisible rectangle that no node can travel outside.")]),t._v(" "),e("p",[t._v("If no width or height is provided to the bounding box function these values will be computed based on the amount of nodes and their sizes.")]),t._v(" "),e("p",[t._v("To se a bounding box simply do the following:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("graph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBoundingBox")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ngraph"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearBoundingBox")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);